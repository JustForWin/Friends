package com.nchu.friends.po;

import java.util.ArrayList;
import java.util.List;

public class UserinfoExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table userinfo
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table userinfo
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table userinfo
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table userinfo
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public UserinfoExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table userinfo
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table userinfo
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table userinfo
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table userinfo
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table userinfo
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table userinfo
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table userinfo
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table userinfo
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table userinfo
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table userinfo
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table userinfo
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andUseridIsNull() {
			addCriterion("userId is null");
			return (Criteria) this;
		}

		public Criteria andUseridIsNotNull() {
			addCriterion("userId is not null");
			return (Criteria) this;
		}

		public Criteria andUseridEqualTo(Integer value) {
			addCriterion("userId =", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotEqualTo(Integer value) {
			addCriterion("userId <>", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridGreaterThan(Integer value) {
			addCriterion("userId >", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
			addCriterion("userId >=", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLessThan(Integer value) {
			addCriterion("userId <", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLessThanOrEqualTo(Integer value) {
			addCriterion("userId <=", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridIn(List<Integer> values) {
			addCriterion("userId in", values, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotIn(List<Integer> values) {
			addCriterion("userId not in", values, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridBetween(Integer value1, Integer value2) {
			addCriterion("userId between", value1, value2, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotBetween(Integer value1, Integer value2) {
			addCriterion("userId not between", value1, value2, "userid");
			return (Criteria) this;
		}

		public Criteria andUsernameIsNull() {
			addCriterion("userName is null");
			return (Criteria) this;
		}

		public Criteria andUsernameIsNotNull() {
			addCriterion("userName is not null");
			return (Criteria) this;
		}

		public Criteria andUsernameEqualTo(String value) {
			addCriterion("userName =", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotEqualTo(String value) {
			addCriterion("userName <>", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameGreaterThan(String value) {
			addCriterion("userName >", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameGreaterThanOrEqualTo(String value) {
			addCriterion("userName >=", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLessThan(String value) {
			addCriterion("userName <", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLessThanOrEqualTo(String value) {
			addCriterion("userName <=", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLike(String value) {
			addCriterion("userName like", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotLike(String value) {
			addCriterion("userName not like", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameIn(List<String> values) {
			addCriterion("userName in", values, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotIn(List<String> values) {
			addCriterion("userName not in", values, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameBetween(String value1, String value2) {
			addCriterion("userName between", value1, value2, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotBetween(String value1, String value2) {
			addCriterion("userName not between", value1, value2, "username");
			return (Criteria) this;
		}

		public Criteria andUserpswIsNull() {
			addCriterion("userPsw is null");
			return (Criteria) this;
		}

		public Criteria andUserpswIsNotNull() {
			addCriterion("userPsw is not null");
			return (Criteria) this;
		}

		public Criteria andUserpswEqualTo(String value) {
			addCriterion("userPsw =", value, "userpsw");
			return (Criteria) this;
		}

		public Criteria andUserpswNotEqualTo(String value) {
			addCriterion("userPsw <>", value, "userpsw");
			return (Criteria) this;
		}

		public Criteria andUserpswGreaterThan(String value) {
			addCriterion("userPsw >", value, "userpsw");
			return (Criteria) this;
		}

		public Criteria andUserpswGreaterThanOrEqualTo(String value) {
			addCriterion("userPsw >=", value, "userpsw");
			return (Criteria) this;
		}

		public Criteria andUserpswLessThan(String value) {
			addCriterion("userPsw <", value, "userpsw");
			return (Criteria) this;
		}

		public Criteria andUserpswLessThanOrEqualTo(String value) {
			addCriterion("userPsw <=", value, "userpsw");
			return (Criteria) this;
		}

		public Criteria andUserpswLike(String value) {
			addCriterion("userPsw like", value, "userpsw");
			return (Criteria) this;
		}

		public Criteria andUserpswNotLike(String value) {
			addCriterion("userPsw not like", value, "userpsw");
			return (Criteria) this;
		}

		public Criteria andUserpswIn(List<String> values) {
			addCriterion("userPsw in", values, "userpsw");
			return (Criteria) this;
		}

		public Criteria andUserpswNotIn(List<String> values) {
			addCriterion("userPsw not in", values, "userpsw");
			return (Criteria) this;
		}

		public Criteria andUserpswBetween(String value1, String value2) {
			addCriterion("userPsw between", value1, value2, "userpsw");
			return (Criteria) this;
		}

		public Criteria andUserpswNotBetween(String value1, String value2) {
			addCriterion("userPsw not between", value1, value2, "userpsw");
			return (Criteria) this;
		}

		public Criteria andUsersexIsNull() {
			addCriterion("userSex is null");
			return (Criteria) this;
		}

		public Criteria andUsersexIsNotNull() {
			addCriterion("userSex is not null");
			return (Criteria) this;
		}

		public Criteria andUsersexEqualTo(String value) {
			addCriterion("userSex =", value, "usersex");
			return (Criteria) this;
		}

		public Criteria andUsersexNotEqualTo(String value) {
			addCriterion("userSex <>", value, "usersex");
			return (Criteria) this;
		}

		public Criteria andUsersexGreaterThan(String value) {
			addCriterion("userSex >", value, "usersex");
			return (Criteria) this;
		}

		public Criteria andUsersexGreaterThanOrEqualTo(String value) {
			addCriterion("userSex >=", value, "usersex");
			return (Criteria) this;
		}

		public Criteria andUsersexLessThan(String value) {
			addCriterion("userSex <", value, "usersex");
			return (Criteria) this;
		}

		public Criteria andUsersexLessThanOrEqualTo(String value) {
			addCriterion("userSex <=", value, "usersex");
			return (Criteria) this;
		}

		public Criteria andUsersexLike(String value) {
			addCriterion("userSex like", value, "usersex");
			return (Criteria) this;
		}

		public Criteria andUsersexNotLike(String value) {
			addCriterion("userSex not like", value, "usersex");
			return (Criteria) this;
		}

		public Criteria andUsersexIn(List<String> values) {
			addCriterion("userSex in", values, "usersex");
			return (Criteria) this;
		}

		public Criteria andUsersexNotIn(List<String> values) {
			addCriterion("userSex not in", values, "usersex");
			return (Criteria) this;
		}

		public Criteria andUsersexBetween(String value1, String value2) {
			addCriterion("userSex between", value1, value2, "usersex");
			return (Criteria) this;
		}

		public Criteria andUsersexNotBetween(String value1, String value2) {
			addCriterion("userSex not between", value1, value2, "usersex");
			return (Criteria) this;
		}

		public Criteria andUserqqIsNull() {
			addCriterion("userQQ is null");
			return (Criteria) this;
		}

		public Criteria andUserqqIsNotNull() {
			addCriterion("userQQ is not null");
			return (Criteria) this;
		}

		public Criteria andUserqqEqualTo(String value) {
			addCriterion("userQQ =", value, "userqq");
			return (Criteria) this;
		}

		public Criteria andUserqqNotEqualTo(String value) {
			addCriterion("userQQ <>", value, "userqq");
			return (Criteria) this;
		}

		public Criteria andUserqqGreaterThan(String value) {
			addCriterion("userQQ >", value, "userqq");
			return (Criteria) this;
		}

		public Criteria andUserqqGreaterThanOrEqualTo(String value) {
			addCriterion("userQQ >=", value, "userqq");
			return (Criteria) this;
		}

		public Criteria andUserqqLessThan(String value) {
			addCriterion("userQQ <", value, "userqq");
			return (Criteria) this;
		}

		public Criteria andUserqqLessThanOrEqualTo(String value) {
			addCriterion("userQQ <=", value, "userqq");
			return (Criteria) this;
		}

		public Criteria andUserqqLike(String value) {
			addCriterion("userQQ like", value, "userqq");
			return (Criteria) this;
		}

		public Criteria andUserqqNotLike(String value) {
			addCriterion("userQQ not like", value, "userqq");
			return (Criteria) this;
		}

		public Criteria andUserqqIn(List<String> values) {
			addCriterion("userQQ in", values, "userqq");
			return (Criteria) this;
		}

		public Criteria andUserqqNotIn(List<String> values) {
			addCriterion("userQQ not in", values, "userqq");
			return (Criteria) this;
		}

		public Criteria andUserqqBetween(String value1, String value2) {
			addCriterion("userQQ between", value1, value2, "userqq");
			return (Criteria) this;
		}

		public Criteria andUserqqNotBetween(String value1, String value2) {
			addCriterion("userQQ not between", value1, value2, "userqq");
			return (Criteria) this;
		}

		public Criteria andLoginflagIsNull() {
			addCriterion("loginFlag is null");
			return (Criteria) this;
		}

		public Criteria andLoginflagIsNotNull() {
			addCriterion("loginFlag is not null");
			return (Criteria) this;
		}

		public Criteria andLoginflagEqualTo(Integer value) {
			addCriterion("loginFlag =", value, "loginflag");
			return (Criteria) this;
		}

		public Criteria andLoginflagNotEqualTo(Integer value) {
			addCriterion("loginFlag <>", value, "loginflag");
			return (Criteria) this;
		}

		public Criteria andLoginflagGreaterThan(Integer value) {
			addCriterion("loginFlag >", value, "loginflag");
			return (Criteria) this;
		}

		public Criteria andLoginflagGreaterThanOrEqualTo(Integer value) {
			addCriterion("loginFlag >=", value, "loginflag");
			return (Criteria) this;
		}

		public Criteria andLoginflagLessThan(Integer value) {
			addCriterion("loginFlag <", value, "loginflag");
			return (Criteria) this;
		}

		public Criteria andLoginflagLessThanOrEqualTo(Integer value) {
			addCriterion("loginFlag <=", value, "loginflag");
			return (Criteria) this;
		}

		public Criteria andLoginflagIn(List<Integer> values) {
			addCriterion("loginFlag in", values, "loginflag");
			return (Criteria) this;
		}

		public Criteria andLoginflagNotIn(List<Integer> values) {
			addCriterion("loginFlag not in", values, "loginflag");
			return (Criteria) this;
		}

		public Criteria andLoginflagBetween(Integer value1, Integer value2) {
			addCriterion("loginFlag between", value1, value2, "loginflag");
			return (Criteria) this;
		}

		public Criteria andLoginflagNotBetween(Integer value1, Integer value2) {
			addCriterion("loginFlag not between", value1, value2, "loginflag");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table userinfo
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userinfo
     *
     * @mbg.generated do_not_delete_during_merge Sat Apr 15 10:03:53 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}