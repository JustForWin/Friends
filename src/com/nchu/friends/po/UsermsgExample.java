package com.nchu.friends.po;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UsermsgExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table usermsg
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table usermsg
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table usermsg
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usermsg
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public UsermsgExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usermsg
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usermsg
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usermsg
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usermsg
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usermsg
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usermsg
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usermsg
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usermsg
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usermsg
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table usermsg
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table usermsg
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andMsgidIsNull() {
			addCriterion("msgId is null");
			return (Criteria) this;
		}

		public Criteria andMsgidIsNotNull() {
			addCriterion("msgId is not null");
			return (Criteria) this;
		}

		public Criteria andMsgidEqualTo(Integer value) {
			addCriterion("msgId =", value, "msgid");
			return (Criteria) this;
		}

		public Criteria andMsgidNotEqualTo(Integer value) {
			addCriterion("msgId <>", value, "msgid");
			return (Criteria) this;
		}

		public Criteria andMsgidGreaterThan(Integer value) {
			addCriterion("msgId >", value, "msgid");
			return (Criteria) this;
		}

		public Criteria andMsgidGreaterThanOrEqualTo(Integer value) {
			addCriterion("msgId >=", value, "msgid");
			return (Criteria) this;
		}

		public Criteria andMsgidLessThan(Integer value) {
			addCriterion("msgId <", value, "msgid");
			return (Criteria) this;
		}

		public Criteria andMsgidLessThanOrEqualTo(Integer value) {
			addCriterion("msgId <=", value, "msgid");
			return (Criteria) this;
		}

		public Criteria andMsgidIn(List<Integer> values) {
			addCriterion("msgId in", values, "msgid");
			return (Criteria) this;
		}

		public Criteria andMsgidNotIn(List<Integer> values) {
			addCriterion("msgId not in", values, "msgid");
			return (Criteria) this;
		}

		public Criteria andMsgidBetween(Integer value1, Integer value2) {
			addCriterion("msgId between", value1, value2, "msgid");
			return (Criteria) this;
		}

		public Criteria andMsgidNotBetween(Integer value1, Integer value2) {
			addCriterion("msgId not between", value1, value2, "msgid");
			return (Criteria) this;
		}

		public Criteria andUseridIsNull() {
			addCriterion("userId is null");
			return (Criteria) this;
		}

		public Criteria andUseridIsNotNull() {
			addCriterion("userId is not null");
			return (Criteria) this;
		}

		public Criteria andUseridEqualTo(Integer value) {
			addCriterion("userId =", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotEqualTo(Integer value) {
			addCriterion("userId <>", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridGreaterThan(Integer value) {
			addCriterion("userId >", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
			addCriterion("userId >=", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLessThan(Integer value) {
			addCriterion("userId <", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLessThanOrEqualTo(Integer value) {
			addCriterion("userId <=", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridIn(List<Integer> values) {
			addCriterion("userId in", values, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotIn(List<Integer> values) {
			addCriterion("userId not in", values, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridBetween(Integer value1, Integer value2) {
			addCriterion("userId between", value1, value2, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotBetween(Integer value1, Integer value2) {
			addCriterion("userId not between", value1, value2, "userid");
			return (Criteria) this;
		}

		public Criteria andMsgtitleIsNull() {
			addCriterion("msgTitle is null");
			return (Criteria) this;
		}

		public Criteria andMsgtitleIsNotNull() {
			addCriterion("msgTitle is not null");
			return (Criteria) this;
		}

		public Criteria andMsgtitleEqualTo(String value) {
			addCriterion("msgTitle =", value, "msgtitle");
			return (Criteria) this;
		}

		public Criteria andMsgtitleNotEqualTo(String value) {
			addCriterion("msgTitle <>", value, "msgtitle");
			return (Criteria) this;
		}

		public Criteria andMsgtitleGreaterThan(String value) {
			addCriterion("msgTitle >", value, "msgtitle");
			return (Criteria) this;
		}

		public Criteria andMsgtitleGreaterThanOrEqualTo(String value) {
			addCriterion("msgTitle >=", value, "msgtitle");
			return (Criteria) this;
		}

		public Criteria andMsgtitleLessThan(String value) {
			addCriterion("msgTitle <", value, "msgtitle");
			return (Criteria) this;
		}

		public Criteria andMsgtitleLessThanOrEqualTo(String value) {
			addCriterion("msgTitle <=", value, "msgtitle");
			return (Criteria) this;
		}

		public Criteria andMsgtitleLike(String value) {
			addCriterion("msgTitle like", value, "msgtitle");
			return (Criteria) this;
		}

		public Criteria andMsgtitleNotLike(String value) {
			addCriterion("msgTitle not like", value, "msgtitle");
			return (Criteria) this;
		}

		public Criteria andMsgtitleIn(List<String> values) {
			addCriterion("msgTitle in", values, "msgtitle");
			return (Criteria) this;
		}

		public Criteria andMsgtitleNotIn(List<String> values) {
			addCriterion("msgTitle not in", values, "msgtitle");
			return (Criteria) this;
		}

		public Criteria andMsgtitleBetween(String value1, String value2) {
			addCriterion("msgTitle between", value1, value2, "msgtitle");
			return (Criteria) this;
		}

		public Criteria andMsgtitleNotBetween(String value1, String value2) {
			addCriterion("msgTitle not between", value1, value2, "msgtitle");
			return (Criteria) this;
		}

		public Criteria andMsgdateIsNull() {
			addCriterion("msgDate is null");
			return (Criteria) this;
		}

		public Criteria andMsgdateIsNotNull() {
			addCriterion("msgDate is not null");
			return (Criteria) this;
		}

		public Criteria andMsgdateEqualTo(Date value) {
			addCriterion("msgDate =", value, "msgdate");
			return (Criteria) this;
		}

		public Criteria andMsgdateNotEqualTo(Date value) {
			addCriterion("msgDate <>", value, "msgdate");
			return (Criteria) this;
		}

		public Criteria andMsgdateGreaterThan(Date value) {
			addCriterion("msgDate >", value, "msgdate");
			return (Criteria) this;
		}

		public Criteria andMsgdateGreaterThanOrEqualTo(Date value) {
			addCriterion("msgDate >=", value, "msgdate");
			return (Criteria) this;
		}

		public Criteria andMsgdateLessThan(Date value) {
			addCriterion("msgDate <", value, "msgdate");
			return (Criteria) this;
		}

		public Criteria andMsgdateLessThanOrEqualTo(Date value) {
			addCriterion("msgDate <=", value, "msgdate");
			return (Criteria) this;
		}

		public Criteria andMsgdateIn(List<Date> values) {
			addCriterion("msgDate in", values, "msgdate");
			return (Criteria) this;
		}

		public Criteria andMsgdateNotIn(List<Date> values) {
			addCriterion("msgDate not in", values, "msgdate");
			return (Criteria) this;
		}

		public Criteria andMsgdateBetween(Date value1, Date value2) {
			addCriterion("msgDate between", value1, value2, "msgdate");
			return (Criteria) this;
		}

		public Criteria andMsgdateNotBetween(Date value1, Date value2) {
			addCriterion("msgDate not between", value1, value2, "msgdate");
			return (Criteria) this;
		}

		public Criteria andCommentnumIsNull() {
			addCriterion("commentNum is null");
			return (Criteria) this;
		}

		public Criteria andCommentnumIsNotNull() {
			addCriterion("commentNum is not null");
			return (Criteria) this;
		}

		public Criteria andCommentnumEqualTo(Integer value) {
			addCriterion("commentNum =", value, "commentnum");
			return (Criteria) this;
		}

		public Criteria andCommentnumNotEqualTo(Integer value) {
			addCriterion("commentNum <>", value, "commentnum");
			return (Criteria) this;
		}

		public Criteria andCommentnumGreaterThan(Integer value) {
			addCriterion("commentNum >", value, "commentnum");
			return (Criteria) this;
		}

		public Criteria andCommentnumGreaterThanOrEqualTo(Integer value) {
			addCriterion("commentNum >=", value, "commentnum");
			return (Criteria) this;
		}

		public Criteria andCommentnumLessThan(Integer value) {
			addCriterion("commentNum <", value, "commentnum");
			return (Criteria) this;
		}

		public Criteria andCommentnumLessThanOrEqualTo(Integer value) {
			addCriterion("commentNum <=", value, "commentnum");
			return (Criteria) this;
		}

		public Criteria andCommentnumIn(List<Integer> values) {
			addCriterion("commentNum in", values, "commentnum");
			return (Criteria) this;
		}

		public Criteria andCommentnumNotIn(List<Integer> values) {
			addCriterion("commentNum not in", values, "commentnum");
			return (Criteria) this;
		}

		public Criteria andCommentnumBetween(Integer value1, Integer value2) {
			addCriterion("commentNum between", value1, value2, "commentnum");
			return (Criteria) this;
		}

		public Criteria andCommentnumNotBetween(Integer value1, Integer value2) {
			addCriterion("commentNum not between", value1, value2, "commentnum");
			return (Criteria) this;
		}

		public Criteria andLikenumIsNull() {
			addCriterion("likeNum is null");
			return (Criteria) this;
		}

		public Criteria andLikenumIsNotNull() {
			addCriterion("likeNum is not null");
			return (Criteria) this;
		}

		public Criteria andLikenumEqualTo(Integer value) {
			addCriterion("likeNum =", value, "likenum");
			return (Criteria) this;
		}

		public Criteria andLikenumNotEqualTo(Integer value) {
			addCriterion("likeNum <>", value, "likenum");
			return (Criteria) this;
		}

		public Criteria andLikenumGreaterThan(Integer value) {
			addCriterion("likeNum >", value, "likenum");
			return (Criteria) this;
		}

		public Criteria andLikenumGreaterThanOrEqualTo(Integer value) {
			addCriterion("likeNum >=", value, "likenum");
			return (Criteria) this;
		}

		public Criteria andLikenumLessThan(Integer value) {
			addCriterion("likeNum <", value, "likenum");
			return (Criteria) this;
		}

		public Criteria andLikenumLessThanOrEqualTo(Integer value) {
			addCriterion("likeNum <=", value, "likenum");
			return (Criteria) this;
		}

		public Criteria andLikenumIn(List<Integer> values) {
			addCriterion("likeNum in", values, "likenum");
			return (Criteria) this;
		}

		public Criteria andLikenumNotIn(List<Integer> values) {
			addCriterion("likeNum not in", values, "likenum");
			return (Criteria) this;
		}

		public Criteria andLikenumBetween(Integer value1, Integer value2) {
			addCriterion("likeNum between", value1, value2, "likenum");
			return (Criteria) this;
		}

		public Criteria andLikenumNotBetween(Integer value1, Integer value2) {
			addCriterion("likeNum not between", value1, value2, "likenum");
			return (Criteria) this;
		}

		public Criteria andDislikenumIsNull() {
			addCriterion("dislikeNum is null");
			return (Criteria) this;
		}

		public Criteria andDislikenumIsNotNull() {
			addCriterion("dislikeNum is not null");
			return (Criteria) this;
		}

		public Criteria andDislikenumEqualTo(Integer value) {
			addCriterion("dislikeNum =", value, "dislikenum");
			return (Criteria) this;
		}

		public Criteria andDislikenumNotEqualTo(Integer value) {
			addCriterion("dislikeNum <>", value, "dislikenum");
			return (Criteria) this;
		}

		public Criteria andDislikenumGreaterThan(Integer value) {
			addCriterion("dislikeNum >", value, "dislikenum");
			return (Criteria) this;
		}

		public Criteria andDislikenumGreaterThanOrEqualTo(Integer value) {
			addCriterion("dislikeNum >=", value, "dislikenum");
			return (Criteria) this;
		}

		public Criteria andDislikenumLessThan(Integer value) {
			addCriterion("dislikeNum <", value, "dislikenum");
			return (Criteria) this;
		}

		public Criteria andDislikenumLessThanOrEqualTo(Integer value) {
			addCriterion("dislikeNum <=", value, "dislikenum");
			return (Criteria) this;
		}

		public Criteria andDislikenumIn(List<Integer> values) {
			addCriterion("dislikeNum in", values, "dislikenum");
			return (Criteria) this;
		}

		public Criteria andDislikenumNotIn(List<Integer> values) {
			addCriterion("dislikeNum not in", values, "dislikenum");
			return (Criteria) this;
		}

		public Criteria andDislikenumBetween(Integer value1, Integer value2) {
			addCriterion("dislikeNum between", value1, value2, "dislikenum");
			return (Criteria) this;
		}

		public Criteria andDislikenumNotBetween(Integer value1, Integer value2) {
			addCriterion("dislikeNum not between", value1, value2, "dislikenum");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table usermsg
	 * @mbg.generated  Sat Apr 22 01:20:07 CST 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table usermsg
     *
     * @mbg.generated do_not_delete_during_merge Sat Apr 15 10:03:53 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}